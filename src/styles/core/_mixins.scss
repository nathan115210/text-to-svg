@use 'variables' as *;
@use 'sass:map';

// Flexbox centring helper
@mixin flex-center($dir: row) {
  display: flex;
  flex-direction: $dir;
  justify-content: center;
  align-items: center;
}

@mixin mq($bp) {
  @media (min-width: map-get($breakpoints, $bp)) {
    @content;
  }
}

// Quick spacing helper: space(3) â†’ 1rem

@function space($key) {
  @return map.get($space, $key);
}

// Darkmode
@mixin darkmode {
  @if (&) {
    @media (prefers-color-scheme: dark) {
      @content;
    }
  } @else {
    @error "The Darkmode mixin must be used with a selector.";
  }
}

/// Reset all native button styles for a custom-styled button
/// Usage: @include mix.reset-button;

@mixin reset-button {
  // Remove default padding, border, background
  padding: 0;
  margin: 0;
  border: none;
  background: none;

  // Reset typography and alignment
  font: inherit;
  color: inherit;
  line-height: inherit;
  text-align: inherit;

  // Clean up box-model & interactions
  box-sizing: border-box;
  outline: none;
  appearance: none;
  -webkit-appearance: none;
  cursor: pointer;

  // Disable unneeded user-select on buttons
  user-select: none;
}
